npm init
npm install --save express mongoose body-parser ejs moment lodash method-override
npm install --save-dev locus nodemon
npm uninstall --save dotenv

export DATABASEURL=mongodb://localhost/db_wordoftheday
mongoose.connect(process.env.DATABASEURL);

npm install -g nodemon
npm install --save-dev nodemon locus
nodemon app.js

var locus = require("locus");
//eval(locus);

to enter html use <%- word.meaning %>

cannot find module “lodash”
$ npm install lodash --save
$ npm cache clean    
$ npm install



mongob
------
mongo
show dbs
use db_wordoftheday
show collections
db.words.find();                select all
db.words.remove({})             delete all records in a collections and will keep the collection as is

git status
git add -A
git commit -m " "
git push -u origin master

github
------
0x00 - Initial commit
0x01 - Add - app.js,package.json,.gitignore,.instructions
0x02 - Add views, Update .instructions,app.js
0x03 - Add semantic-ui
0x04 - Add show route
0x05 -
0x06 -
0x07 -
0x08 -
0x09 -
0x0A -
0x0B -
0x0C -
0x0D -
0x0E -
0x0F -
0x10 -























MongoDB
----------------------------------------------------------------------------
----------------------------------------------------------------------------
new version
Since the update of MongoDB to 3.6 there have been a few changes to the installation process.
Now, in order to get it working you'll need to run the following commands:
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5
echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.6 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.6.list
sudo apt-get update
sudo apt-get install -y mongodb-org
You should now have mongo 3.6.2 or newer, you can double check with 
mongo --version 
Now type cd in the terminal and hit enter to go into the root directory ~
Enter the following:
mkdir data
echo "mongod --dbpath=data --nojournal" > mongod
chmod a+x mongod
Now, in order to run mongod you'll first need to 
cd 
into root ~ then run 
./mongod 
Additionally, after you're up and running with mongo, be sure to shut down your ./mongod server each time you're done working. You can do this with 
ctrl + c
If you leave it running then Cloud 9 could timeout and cause mongo to crash. If this happens, try the following steps to repair it. 
From the command line, run:
cd ~
./mongod --repair

If you're still having trouble getting it to run then find the /data directory (it should be inside of ~) and cd into it. Once inside, run rm mongod.lock then cd back into ~ and run ./mongod again (see below).
cd ~/data
rm mongod.lock
cd
./mongod



old version
Installing MongoDB on a Cloud9 workspace -  https://community.c9.io/t/setting-up-mongodb/1717
To install MongoDB in your workspace, you can open a terminal and run the following command:

sudo apt-get install -y mongodb-org

Running MongoDB on a Cloud9 workspace
MongoDB is preinstalled in your workspace. To run MongoDB, run the following below (passing the correct parameters to it). Mongodb data will be stored in the folder data.

$ mkdir data
$ echo 'mongod --bind_ip=$IP --dbpath=data --nojournal --rest "$@"' > mongod
$ chmod a+x mongod

You can start mongodb by running the mongod script on your project root:

$ ./mongod


How to delete an old version of mongodb and install the new one in cloud9 IDE? - https://stackoverflow.com/questions/33204739/how-to-delete-an-old-version-of-mongodb-and-install-the-new-one-in-cloud9-ide

The first thing you have to do is to remove the existing mongodb:

sudo apt-get remove mongodb* --purge

Then we can follow instructions from MongoDB docs.

sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10
echo "deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.0.list
sudo apt-get update
sudo apt-get install -y mongodb-org
